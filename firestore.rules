rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user has access to a trip
    function hasAccess(tripId) {
      return request.auth != null && 
             request.auth.token.email in get(/databases/$(database)/documents/trips/$(tripId)).data.user_access;
    }
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null && request.auth.token.email != null;
    }
    
    // Trips collection
    match /trips/{tripId} {
      // Allow read if user's email is in the user_access array
      allow read: if isAuthenticated() && 
                     request.auth.token.email in resource.data.user_access;
      
      // Allow create if user is authenticated and adds themselves to user_access
      allow create: if isAuthenticated() && 
                       request.auth.token.email in request.resource.data.user_access &&
                       request.resource.data.updated_by == request.auth.token.email;
      
      // Allow update if user has access to the trip
      allow update: if isAuthenticated() && 
                       request.auth.token.email in resource.data.user_access &&
                       request.resource.data.updated_by == request.auth.token.email;
      
      // Allow delete if user has access to the trip
      allow delete: if isAuthenticated() && 
                       request.auth.token.email in resource.data.user_access;
      
      // Subcollections: flights, hotels, activities, restaurants
      // All inherit the trip-level access control
      match /flights/{flightId} {
        allow read, write: if hasAccess(tripId);
      }
      
      match /hotels/{hotelId} {
        allow read, write: if hasAccess(tripId);
      }
      
      match /activities/{activityId} {
        allow read, write: if hasAccess(tripId);
      }
      
      match /restaurants/{restaurantId} {
        allow read, write: if hasAccess(tripId);
      }
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
